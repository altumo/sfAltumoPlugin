propel:
  _attributes:
    package: plugins.sfAltumo.lib.model

  user:
    _attributes:            { phpName: User }
    id:
    sf_guard_user_id:       { type: integer, foreignTable: sf_guard_user, foreignReference: id, required: true, onDelete: cascade, index: unique }
    password_reset_key:     { type: varchar(16), required: false, unique: true, index: unique }
    active:                 { type: boolean, index: true, required: true, default: true }
    created_at:
    updated_at:
    
  api_key:
    _attributes:            { phpName: ApiKey }
    id:  
    user_id:                { type: integer, foreignTable: user, foreignReference: id, required: true, onDelete: cascade, onUpdate: restrict }
    api_key:                { type: char, size: 20, required: false, index: unique }
    secret_access_key:      { type: char, size: 40, index: true }
    active:                 { type: boolean, index: true, default: true }
    created_at:
    updated_at:
    
  session:
    _attributes:            { phpName: Session }
    id:
    session_key:            { type: varchar(32), index: unique, required: true  }
    user_id:                { type: integer, foreignTable: user, foreignReference: id, require: true, onDelete: cascade }
    data:                   { type: blob }
    client_ip_address:      { type: varchar(39), index: true } //ipv6 friendly
    session_type:           { type: varchar(32) }
    time:                   { type: integer, required: true, index: true }

  single_sign_on_key:
    _attributes:            { phpName: SingleSignOnKey }
    id:
    secret:                 { type: varchar(32), required: true, index: unique }
    used:                   { type: boolean, required: true, default: false, index: true }
    session_id:             { type: integer, foreignTable: session, foreignReference: id, required: false, onDelete: cascade }
    valid_for_minutes:      { type: integer, required: true, default: 1440 }
    created_at:
    updated_at:
    _indexes:
      secret_used: [ secret, used ]      

  system_event:
    _attributes:            { phpName: SystemEvent }
    id:
    name:                   { type: varchar(64), index: true, required: true }
    unique_key:             { type: varchar(64), index: unique, required: true }
    slug:                   { type: varchar(255), index: unique, required: true }
    enabled:                { type: boolean, required: true, index: true, default: true }
    created_at:
    updated_at:
    
  system_event_subscription:
    _attributes:            { phpName: SystemEventSubscription }
    id:
    system_event_id:        { type: integer, foreignTable: system_event, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade }
    user_id:                { type: integer, foreignTable: user, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade }
    remote_url:             { type: varchar(255) }
    enabled:                { type: boolean, required: true, index: true, default: true }
    created_at:
    updated_at:
    
  system_event_instance:
    _attributes:            { phpName: SystemEventInstance }
    id:
    system_event_id:        { type: integer, foreignTable: system_event, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade }
    user_id:                { type: integer, foreignTable: user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    message:                { type: longvarchar }
    created_at:
    updated_at:
    
  system_event_instance_message:
    _attributes:            { phpName: SystemEventInstanceMessage }
    id:
    system_event_instance_id:     { type: integer, foreignTable: system_event_instance, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade }
    system_event_subscription_id: { type: integer, foreignTable: system_event_subscription, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade }
    received:               { type: boolean, index: true, required: true, default: false }
    received_at:            { type: timestamp }
    status_message:         { type: varchar(255) }
    created_at:
    updated_at:
      
      